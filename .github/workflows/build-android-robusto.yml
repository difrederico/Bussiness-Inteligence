name: Build Android APK - Robusto
on:
  workflow_dispatch:
    inputs:
      debug_mode:
        description: 'Enable debug mode'
        required: false
        default: false
        type: boolean
  push:
    branches: [ main ]
    paths:
      - 'v2-android/**'

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 1
    
    - name: Setup Python 3.10
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
        cache: 'pip'
    
    - name: Free Disk Space
      run: |
        sudo rm -rf /usr/share/dotnet
        sudo rm -rf /opt/ghc
        sudo rm -rf "/usr/local/share/boost"
        sudo rm -rf "$AGENT_TOOLSDIRECTORY"
        df -h
    
    - name: Install System Dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          git zip unzip wget curl \
          openjdk-17-jdk \
          build-essential \
          autoconf libtool pkg-config \
          zlib1g-dev libncurses5-dev libncursesw5-dev libtinfo5 \
          libssl-dev libffi-dev \
          python3-dev python3-pip \
          libbz2-dev libreadline-dev libsqlite3-dev \
          llvm libncursesw5-dev xz-utils tk-dev
    
    - name: Setup Java Environment
      run: |
        echo "JAVA_HOME=/usr/lib/jvm/java-17-openjdk-amd64" >> $GITHUB_ENV
        echo "/usr/lib/jvm/java-17-openjdk-amd64/bin" >> $GITHUB_PATH
        java -version
    
    - name: Install Python Dependencies
      run: |
        python -m pip install --upgrade pip setuptools wheel
        pip install --upgrade cython buildozer
        pip install colorama appdirs sh jinja2 packaging
    
    - name: Verify buildozer installation
      run: |
        buildozer --version
        which buildozer
        
    - name: Navigate to project directory
      run: |
        cd v2-android
        ls -la
        cat buildozer.spec | head -20
    
    - name: Clean previous builds
      run: |
        cd v2-android
        rm -rf .buildozer/android/platform/build-*
        rm -rf bin/
    
    - name: Build APK (with timeout and retry)
      timeout-minutes: 45
      run: |
        cd v2-android
        # Set buildozer to auto-accept
        export BUILDOZER_AUTO_ACCEPT_ANDROID_SDK_LICENSE=1
        
        # Run build with automatic yes responses
        echo "y" | buildozer android debug || {
          echo "First build attempt failed, trying again..."
          sleep 30
          echo "y" | buildozer android debug
        }
    
    - name: List build outputs
      run: |
        cd v2-android
        echo "=== Checking bin directory ==="
        ls -la bin/ || echo "No bin directory found"
        
        echo "=== Checking buildozer build directory ==="
        find .buildozer -name "*.apk" -type f || echo "No APK found in buildozer"
        
        echo "=== Checking all APK files ==="
        find . -name "*.apk" -type f
    
    - name: Copy APK to accessible location
      run: |
        cd v2-android
        mkdir -p dist
        
        # Find and copy APK
        APK_FILE=$(find . -name "*.apk" -type f | head -1)
        if [ -n "$APK_FILE" ]; then
          echo "Found APK: $APK_FILE"
          cp "$APK_FILE" dist/MercadoEmNumeros-debug.apk
          ls -la dist/
        else
          echo "No APK file found!"
          exit 1
        fi
    
    - name: Upload APK Artifact
      uses: actions/upload-artifact@v4
      with:
        name: android-apk-${{ github.run_number }}
        path: v2-android/dist/*.apk
        retention-days: 30
        if-no-files-found: error
    
    - name: Upload Build Logs (on failure)
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: build-logs-${{ github.run_number }}
        path: |
          v2-android/.buildozer/android/platform/build-*/dists/*/gradle-debug.log
          v2-android/.buildozer/android/platform/build-*/logs/*.log
        retention-days: 7
        if-no-files-found: warn